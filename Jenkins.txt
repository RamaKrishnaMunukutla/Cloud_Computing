
 
 
  Â  JENKINS(-YOUTUBE-) -----> ASHOK-IT , Almighty Java , JavaTechie, TechPrimers

==============================================================================================

    Change-Port(In-Path) ----> java -jar jenkins.war --httpPort=9898
	
	  Credentials -----> rama /// rama  // http://localhost:9898/
	  
    linux
    git
    jenkins
    docker
    maven/ansible
    kubernetes

==========================================================================================================
 
  Jenkins880 := ( GIT ----> Jenkins ----> SeleniumServer ----> ProductionServer )
~~~~~~~~~~~~
--->Jenkins server finds the changes that have occurred GIT. Jenkins will draw those changes  Builds Regularly.
--->If built is successful, then Jenkins server deploys the built in the test server.
--->After testing, Jenkins server generates a feedback and then notifies the developers about the build and test results.
--->Repeat Above steps....
 
 
---->Jenkins follows Master-Slave architecture to manage distributed builds. In this architecture, slave and master communicate through TCP/IP protocol.


 Continious-Integration UseCase :=  /// Developer can have Continious FeedBack of Application Performance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 --- For every COMMIT to the Source-Code, an auto-Build is triggered and is automatically (Build ---> Test && -->) deployed
         on Test Server in Jenkins. 
 --- By Above Step, Developer can detect BUG by looking at RECENT-COMMIT that was done to Source-Code. 



 Continious-Build :=
~~~~~~~~~~~~~~~~~~~~
 --- It Compiles, validate, Code-Review, Unit-Test and and Integrating-Testing 



===============================================================================================================


  
================================================================================================================ 
  
  
================================================================================================================ 
  
  
================================================================================================================   
  
  
================================================================================================================ 
    
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 



===============================================================================================================


  
================================================================================================================ 
  
  
================================================================================================================ 
  
  
================================================================================================================   
  
  
================================================================================================================ 
    
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 

 Contionious-Integration (CI) :=
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 --- Used When the Developer made changes in repositary, then Updated Source-code is deployed in Server.
 
 
 CI-WorkFlow :=
~~~~~~~~~~~~~~
          Integrate ----> Build ----> Test ----> Deploy. 
		   
 Contionious-Testing-Tool    ----> Selenium
 Contionious-Management-Tool ----> Puppet
 Contionious-Deployment-Tool ----> Ansible
 Contionious-Monitoring Tool ----> Nagious
  

  WithGIT  := // Source-Code-Management(SCM)
~~~~~~~~~~~~

(1)
---- Mange-Jenkins ----> Global Tool Configuration ---->  Paste Java_Path && give name //
 
(2)
--- New-Item ----> Free-Style-Project 

(3)
----> Description 
      
     ---> (Paste) Git-Project	  
     ---> SCM ( GIT --> Link-paste && (Click) 'credentials'S "ADD" ' && give UN,Pw,Id,Use) &&
		        
      				In-'Credentials '(Click) on 'Your-name'   
		
     ---> BUILD-TRIGGER ( Pol-SCM [5-Stars] )
	 ---> BUILD-ENVIRONMENT [(Click) Delete workspace before build starts ]
	 ---> BUILD ( (Click)Invoke Top-Level Maven targets && Goals --> clean compile test package )
	 ---> POST-BUILD ACTIONS 

 (4) 
----> clean  --- To Deletes target File-Folder && 
     compile --- To Compiles Java Files
	  test   --- To Executes Junit-Classes
	 package --- To Create WAR-File for Project.


===============================================================================================================


  
================================================================================================================ 
  
  
================================================================================================================ 
  
  
================================================================================================================   
  
  
================================================================================================================ 
    
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 
  
  
================================================================================================================
 
  
================================================================================================================ 
  
  














