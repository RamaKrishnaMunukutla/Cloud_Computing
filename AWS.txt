


   .....TypeOfServices

   .....ComputerServices.........EC2Details........
   
    ....StorageServices.......DataBaseServices.....NetworkServices

   .....DeveloperTools........SecurityIdentityAndCompilanceService  
   

==============================================================================================================

   https://aws.amazon.com/console/  ///mvsrkri007 /// Amazon910@#

  https://www.nareshit.com/aws-online-training/
  
  
  Bucket (S3) ----> bucketDemo


===============================================================================================================

 --- Provides (Shared)-Services on Demand and  access Over Network .

    Popular Cloud Services ----->  AWS, Azure, GCP, Oracle, IBM , Alibaba 

   Cloud Types ----> Public(Above), 
                     Private (Dell, Siemens) , 
					 Hybrid (Public + Private)
					 
 TypeOfServices :=
~~~~~~~~~~~~~~~~~~
 
 (a) Iaas ---> Upto OS-Level
 (b) Paas ---> Upto Installed-Sotware RunTime_Level 
 (c) Saas ----> (Ready) 
 
 VM Based Model Deploy :=
~~~~~~~~~~~~~~~~~~~~~~~
  Ansible // Puppte // Cheft 
 
===============================================================================================================
 
 ComputerServices :=
~~~~~~~~~~~~~~~~~~~~
 --- Used to Build , Deploy && Scale an application in Cloud-Platform. 

    Eg :=  (1) EC2, (2) Lambda,                   (3) Elastic-Conatiner-Service (ECS) , 
	       (4) Elastic-Load-Balancer (ELB) ,      (5) Elastic-Bean-Stack (EBS) 
   
   
 (1) EC2 := 
~~~~~~~~~~~
 --- Used to Rent 'VM' && Resize the Compute-Capacity
 --- Billing Based on 'HOURLY' Service-Usage. (***)
	 
 
  EC2 (Elastic Cloud EC2Details) := has AMI (Amazon machine Image) to launch the instance of Operating System. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 --- Gives Virtual Machines to run applications on them .
 --- Uses 'SSH' Protocal to Communicate (Port-22) with Local-Systems 
 
    (a) Public-Key ----> Remote Machine  /// 2048-bit SSH-2 RSA keys ( Cannot Decrypt which is Encrypted ) 
	                     Can Create 5000 Keys Per Region 
	
	(b) Private-Key ---> Client Machine  /// Used to communicate with Remote Machine 
 

 EC2 Instance Creation :=
~~~~~~~~~~~~~~~~~~~~~~~
  Services ---> EC2 ---> New Instance ----> Select Free ---> Next(2) ----> Give OS--Name 


 Putty && PuTTY Gen := /// Connects EC2 Instance to Local Machine(Windows)
~~~~~~~~~~~~~~~~~~~~~~
 --- To Connect to any Machine Using SSH .
 --- Converst Downloaded Private Key to PPK Format using PuTTY-Gen , Load-file to Under SSH/OATH Section . 
 
========================================

 (2) Lambda (ServerLess Compute Service ):= Used to execute code for Specific-Application. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 --- These are building-Blocks used to deploy application in cloud. 
 --- Billing Based on '100-MilliSeonds' Service-Usage. (**Unlike Runs on 'HOUR' Basis **)
 --- Works on Trigger-Based (Data Inserted), which should be processed by 'AWS-Lambda' Having "Function" 
 
      Function ---> Having Executable Logic-Of-Email that will Sends to End-User. 
 
   
=======================================================================================================================

 StorageServices :=
~~~~~~~~~~~~~~~~~
 --- Stores Data && Advantage is to Disaster-Data recovery with High durability. 

  Eg :=  (1) S3  (2) EBS  (3) StorageGateWay 


 (1) S3 :=
~~~~~~~~~~
 --- Open Cloud-Based Storage Service used for Online-Data Backup (Stores Files && Objects) . 


=======================================================================================================================

 DataBaseServices :=  
~~~~~~~~~~~~~~~~~~~
 ---  Cost-Efficient , High-Secure && Scalable  database Instances in Cloud. 

  Eg :=  (1) RDS  (2) DynamoDB  (3) Elastic-Cache  (4) Amazon-Redshift 


 (1) RDS :=  It is RDBMS
~~~~~~~~~~~


 (2) DynamoDB :=
~~~~~~~~~~~~~~~~
 --- It gives Fast && Reliable Performance with no Scalability Issues. 


=======================================================================================================================
 
 NetworkServices :=
~~~~~~~~~~~~~~~~~~~
 --- Connects Physical Network to Private VN with high transfer Speed. 
 
   Eg :=  (1) VPC  (2) Route-53  (3) Direct-Connect  (4) Cloud-Front
 
 (1) VPC :=
~~~~~~~~~
 --- Deploys AWS-Services(EC2-Instance) into Private-Virtual-Cloud
 
 
 (2) Route-53 :=
~~~~~~~~~~~~~~~~~
 --- It is High Available DNS that helps user to Route by tranaslating text to IP Address.  
 
 
=======================================================================================================================

 DeveloperTools (AWS-DevOps-Tools) :=   
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 --- Used to Build, deploy and Run application Source-Code Automatically. 
 --- Also updates Server and Instance Workload. 
  
  (1) Code-Star  (2) Code-Build  (3) Code-Deploy  (4) Code-PipeLine 
 

 (1) CoseStar :=
~~~~~~~~~~~~~~~
 --- Designed to Manage App-Dev at Single-Place. 
 
 
 
=======================================================================================================================
 
 SecurityIdentityAndCompilanceService :=
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 --- Monitors Safe-Environment for your AWS resources by providing Limited-Access to Specific-User. 
 
  Eg :=  (1) IAM  (2) KMS  (3) Cognito  (4) WAF 

=======================================================================================================================\


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================\


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================



=======================================================================================================================


=======================================================================================================================


=======================================================================================================================\


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================


=======================================================================================================================












































































































